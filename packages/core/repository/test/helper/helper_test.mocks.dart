// Mocks generated by Mockito 5.4.4 from annotations
// in core_repository/test/helper/helper_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i14;

import 'package:core_foundation/foundation.dart' as _i8;
import 'package:core_repository/app_setting_info/app_setting_info_repository.dart'
    as _i11;
import 'package:core_repository/flutter_tts/flutter_tts_repository.dart'
    as _i19;
import 'package:core_repository/secure_storage/secure_storage_repository.dart'
    as _i10;
import 'package:core_repository/shared_preferences/shared_preference_repository.dart'
    as _i7;
import 'package:core_repository/sql/quiz_favorite_sql/quiz_favorite_sql.dart'
    as _i18;
import 'package:flutter/foundation.dart' as _i9;
import 'package:flutter/services.dart' as _i15;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i12;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i2;
import 'package:flutter_tts/flutter_tts.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i16;
import 'package:shared_preferences/shared_preferences.dart' as _i6;
import 'package:sqflite/sqflite.dart' as _i4;
import 'package:sqflite_common/sql.dart' as _i17;
import 'package:state_notifier/state_notifier.dart' as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIOSOptions_0 extends _i1.SmartFake implements _i2.IOSOptions {
  _FakeIOSOptions_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidOptions_1 extends _i1.SmartFake
    implements _i2.AndroidOptions {
  _FakeAndroidOptions_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxOptions_2 extends _i1.SmartFake implements _i2.LinuxOptions {
  _FakeLinuxOptions_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsOptions_3 extends _i1.SmartFake
    implements _i2.WindowsOptions {
  _FakeWindowsOptions_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebOptions_4 extends _i1.SmartFake implements _i2.WebOptions {
  _FakeWebOptions_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMacOsOptions_5 extends _i1.SmartFake implements _i2.MacOsOptions {
  _FakeMacOsOptions_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSpeechRateValidRange_6 extends _i1.SmartFake
    implements _i3.SpeechRateValidRange {
  _FakeSpeechRateValidRange_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabase_7 extends _i1.SmartFake implements _i4.Database {
  _FakeDatabase_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_8<T1> extends _i1.SmartFake implements _i5.Future<T1> {
  _FakeFuture_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryCursor_9 extends _i1.SmartFake implements _i4.QueryCursor {
  _FakeQueryCursor_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBatch_10 extends _i1.SmartFake implements _i4.Batch {
  _FakeBatch_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i6.SharedPreferences {
  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
        returnValueForMissingStub: <String>{},
      ) as Set<String>);

  @override
  Object? get(String? key) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as Object?);

  @override
  bool? getBool(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as bool?);

  @override
  int? getInt(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as int?);

  @override
  double? getDouble(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getDouble,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as double?);

  @override
  String? getString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as String?);

  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  List<String>? getStringList(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getStringList,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as List<String>?);

  @override
  _i5.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [SharedPreferencesRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferencesRepositoryImpl extends _i1.Mock
    implements _i7.SharedPreferencesRepositoryImpl {
  @override
  _i5.Future<bool> save<T>(
    _i8.AppPrefsKey? key,
    T? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #save,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  T? fetch<T>(_i8.AppPrefsKey? key) => (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as T?);

  @override
  _i5.Future<bool> remove(_i8.AppPrefsKey? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [SharedPreferencesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferencesRepository extends _i1.Mock
    implements _i7.SharedPreferencesRepository {
  @override
  _i5.Future<bool> save<T>(
    _i8.AppPrefsKey? key,
    T? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #save,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  T? fetch<T>(_i8.AppPrefsKey? key) => (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [key],
        ),
        returnValueForMissingStub: null,
      ) as T?);

  @override
  _i5.Future<bool> remove(_i8.AppPrefsKey? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i2.FlutterSecureStorage {
  @override
  _i2.IOSOptions get iOptions => (super.noSuchMethod(
        Invocation.getter(#iOptions),
        returnValue: _FakeIOSOptions_0(
          this,
          Invocation.getter(#iOptions),
        ),
        returnValueForMissingStub: _FakeIOSOptions_0(
          this,
          Invocation.getter(#iOptions),
        ),
      ) as _i2.IOSOptions);

  @override
  _i2.AndroidOptions get aOptions => (super.noSuchMethod(
        Invocation.getter(#aOptions),
        returnValue: _FakeAndroidOptions_1(
          this,
          Invocation.getter(#aOptions),
        ),
        returnValueForMissingStub: _FakeAndroidOptions_1(
          this,
          Invocation.getter(#aOptions),
        ),
      ) as _i2.AndroidOptions);

  @override
  _i2.LinuxOptions get lOptions => (super.noSuchMethod(
        Invocation.getter(#lOptions),
        returnValue: _FakeLinuxOptions_2(
          this,
          Invocation.getter(#lOptions),
        ),
        returnValueForMissingStub: _FakeLinuxOptions_2(
          this,
          Invocation.getter(#lOptions),
        ),
      ) as _i2.LinuxOptions);

  @override
  _i2.WindowsOptions get wOptions => (super.noSuchMethod(
        Invocation.getter(#wOptions),
        returnValue: _FakeWindowsOptions_3(
          this,
          Invocation.getter(#wOptions),
        ),
        returnValueForMissingStub: _FakeWindowsOptions_3(
          this,
          Invocation.getter(#wOptions),
        ),
      ) as _i2.WindowsOptions);

  @override
  _i2.WebOptions get webOptions => (super.noSuchMethod(
        Invocation.getter(#webOptions),
        returnValue: _FakeWebOptions_4(
          this,
          Invocation.getter(#webOptions),
        ),
        returnValueForMissingStub: _FakeWebOptions_4(
          this,
          Invocation.getter(#webOptions),
        ),
      ) as _i2.WebOptions);

  @override
  _i2.MacOsOptions get mOptions => (super.noSuchMethod(
        Invocation.getter(#mOptions),
        returnValue: _FakeMacOsOptions_5(
          this,
          Invocation.getter(#mOptions),
        ),
        returnValueForMissingStub: _FakeMacOsOptions_5(
          this,
          Invocation.getter(#mOptions),
        ),
      ) as _i2.MacOsOptions);

  @override
  void registerListener({
    required String? key,
    required _i9.ValueChanged<String?>? listener,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerListener,
          [],
          {
            #key: key,
            #listener: listener,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterListener({
    required String? key,
    required _i9.ValueChanged<String?>? listener,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterListener,
          [],
          {
            #key: key,
            #listener: listener,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListenersForKey({required String? key}) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterAllListenersForKey,
          [],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListeners() => super.noSuchMethod(
        Invocation.method(
          #unregisterAllListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> write({
    required String? key,
    required String? value,
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> read({
    required String? key,
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<bool> containsKey({
    required String? key,
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<void> delete({
    required String? key,
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, String>> readAll({
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i5.Future<Map<String, String>>.value(<String, String>{}),
        returnValueForMissingStub:
            _i5.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i5.Future<Map<String, String>>);

  @override
  _i5.Future<void> deleteAll({
    _i2.IOSOptions? iOptions,
    _i2.AndroidOptions? aOptions,
    _i2.LinuxOptions? lOptions,
    _i2.WebOptions? webOptions,
    _i2.MacOsOptions? mOptions,
    _i2.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool?> isCupertinoProtectedDataAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isCupertinoProtectedDataAvailable,
          [],
        ),
        returnValue: _i5.Future<bool?>.value(),
        returnValueForMissingStub: _i5.Future<bool?>.value(),
      ) as _i5.Future<bool?>);
}

/// A class which mocks [SecureStorageRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageRepositoryImpl extends _i1.Mock
    implements _i10.SecureStorageRepositoryImpl {
  @override
  _i5.Future<void> save<T>(
    _i8.AppPrefsKey? key,
    T? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #save,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<T?> fetch<T>(_i8.AppPrefsKey? key) => (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [key],
        ),
        returnValue: _i5.Future<T?>.value(),
        returnValueForMissingStub: _i5.Future<T?>.value(),
      ) as _i5.Future<T?>);

  @override
  _i5.Future<void> remove(_i8.AppPrefsKey? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [AppSettingInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppSettingInfo extends _i1.Mock implements _i11.AppSettingInfo {
  @override
  set onError(_i12.ErrorListener? _onError) => super.noSuchMethod(
        Invocation.setter(
          #onError,
          _onError,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.Stream<_i8.AppInstallType> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i5.Stream<_i8.AppInstallType>.empty(),
        returnValueForMissingStub: _i5.Stream<_i8.AppInstallType>.empty(),
      ) as _i5.Stream<_i8.AppInstallType>);

  @override
  _i8.AppInstallType get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i8.AppInstallType.none,
        returnValueForMissingStub: _i8.AppInstallType.none,
      ) as _i8.AppInstallType);

  @override
  set state(_i8.AppInstallType? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.AppInstallType get debugState => (super.noSuchMethod(
        Invocation.getter(#debugState),
        returnValue: _i8.AppInstallType.none,
        returnValueForMissingStub: _i8.AppInstallType.none,
      ) as _i8.AppInstallType);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i5.Future<void> setup() => (super.noSuchMethod(
        Invocation.method(
          #setup,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> changeAppInstallType(_i8.AppInstallType? type) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeAppInstallType,
          [type],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  bool updateShouldNotify(
    _i8.AppInstallType? old,
    _i8.AppInstallType? current,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            old,
            current,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i12.RemoveListener addListener(
    _i13.Listener<_i8.AppInstallType>? listener, {
    bool? fireImmediately = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
          {#fireImmediately: fireImmediately},
        ),
        returnValue: () {},
        returnValueForMissingStub: () {},
      ) as _i12.RemoveListener);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FlutterTts].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterTts extends _i1.Mock implements _i3.FlutterTts {
  @override
  set startHandler(_i14.VoidCallback? _startHandler) => super.noSuchMethod(
        Invocation.setter(
          #startHandler,
          _startHandler,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set completionHandler(_i14.VoidCallback? _completionHandler) =>
      super.noSuchMethod(
        Invocation.setter(
          #completionHandler,
          _completionHandler,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set pauseHandler(_i14.VoidCallback? _pauseHandler) => super.noSuchMethod(
        Invocation.setter(
          #pauseHandler,
          _pauseHandler,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set continueHandler(_i14.VoidCallback? _continueHandler) =>
      super.noSuchMethod(
        Invocation.setter(
          #continueHandler,
          _continueHandler,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set cancelHandler(_i14.VoidCallback? _cancelHandler) => super.noSuchMethod(
        Invocation.setter(
          #cancelHandler,
          _cancelHandler,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set progressHandler(_i3.ProgressHandler? _progressHandler) =>
      super.noSuchMethod(
        Invocation.setter(
          #progressHandler,
          _progressHandler,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set errorHandler(_i3.ErrorHandler? _errorHandler) => super.noSuchMethod(
        Invocation.setter(
          #errorHandler,
          _errorHandler,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<int?> get getMaxSpeechInputLength => (super.noSuchMethod(
        Invocation.getter(#getMaxSpeechInputLength),
        returnValue: _i5.Future<int?>.value(),
        returnValueForMissingStub: _i5.Future<int?>.value(),
      ) as _i5.Future<int?>);

  @override
  _i5.Future<dynamic> get getLanguages => (super.noSuchMethod(
        Invocation.getter(#getLanguages),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> get getEngines => (super.noSuchMethod(
        Invocation.getter(#getEngines),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> get getDefaultEngine => (super.noSuchMethod(
        Invocation.getter(#getDefaultEngine),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> get getDefaultVoice => (super.noSuchMethod(
        Invocation.getter(#getDefaultVoice),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> get getVoices => (super.noSuchMethod(
        Invocation.getter(#getVoices),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<_i3.SpeechRateValidRange> get getSpeechRateValidRange =>
      (super.noSuchMethod(
        Invocation.getter(#getSpeechRateValidRange),
        returnValue: _i5.Future<_i3.SpeechRateValidRange>.value(
            _FakeSpeechRateValidRange_6(
          this,
          Invocation.getter(#getSpeechRateValidRange),
        )),
        returnValueForMissingStub: _i5.Future<_i3.SpeechRateValidRange>.value(
            _FakeSpeechRateValidRange_6(
          this,
          Invocation.getter(#getSpeechRateValidRange),
        )),
      ) as _i5.Future<_i3.SpeechRateValidRange>);

  @override
  _i5.Future<dynamic> awaitSpeakCompletion(bool? awaitCompletion) =>
      (super.noSuchMethod(
        Invocation.method(
          #awaitSpeakCompletion,
          [awaitCompletion],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> awaitSynthCompletion(bool? awaitCompletion) =>
      (super.noSuchMethod(
        Invocation.method(
          #awaitSynthCompletion,
          [awaitCompletion],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> speak(String? text) => (super.noSuchMethod(
        Invocation.method(
          #speak,
          [text],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> pause() => (super.noSuchMethod(
        Invocation.method(
          #pause,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> synthesizeToFile(
    String? text,
    String? fileName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #synthesizeToFile,
          [
            text,
            fileName,
          ],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setLanguage(String? language) => (super.noSuchMethod(
        Invocation.method(
          #setLanguage,
          [language],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setSpeechRate(double? rate) => (super.noSuchMethod(
        Invocation.method(
          #setSpeechRate,
          [rate],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setVolume(double? volume) => (super.noSuchMethod(
        Invocation.method(
          #setVolume,
          [volume],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setSharedInstance(bool? sharedSession) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSharedInstance,
          [sharedSession],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> autoStopSharedSession(bool? autoStop) =>
      (super.noSuchMethod(
        Invocation.method(
          #autoStopSharedSession,
          [autoStop],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setIosAudioCategory(
    _i3.IosTextToSpeechAudioCategory? category,
    List<_i3.IosTextToSpeechAudioCategoryOptions>? options, [
    _i3.IosTextToSpeechAudioMode? mode =
        _i3.IosTextToSpeechAudioMode.defaultMode,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #setIosAudioCategory,
          [
            category,
            options,
            mode,
          ],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setEngine(String? engine) => (super.noSuchMethod(
        Invocation.method(
          #setEngine,
          [engine],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setPitch(double? pitch) => (super.noSuchMethod(
        Invocation.method(
          #setPitch,
          [pitch],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setVoice(Map<String, String>? voice) =>
      (super.noSuchMethod(
        Invocation.method(
          #setVoice,
          [voice],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> clearVoice() => (super.noSuchMethod(
        Invocation.method(
          #clearVoice,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> stop() => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> isLanguageAvailable(String? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #isLanguageAvailable,
          [language],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> isLanguageInstalled(String? language) =>
      (super.noSuchMethod(
        Invocation.method(
          #isLanguageInstalled,
          [language],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> areLanguagesInstalled(List<String>? languages) =>
      (super.noSuchMethod(
        Invocation.method(
          #areLanguagesInstalled,
          [languages],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setSilence(int? timems) => (super.noSuchMethod(
        Invocation.method(
          #setSilence,
          [timems],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> setQueueMode(int? queueMode) => (super.noSuchMethod(
        Invocation.method(
          #setQueueMode,
          [queueMode],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  void setStartHandler(_i14.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setStartHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setCompletionHandler(_i14.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setCompletionHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setContinueHandler(_i14.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setContinueHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setPauseHandler(_i14.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setPauseHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setCancelHandler(_i14.VoidCallback? callback) => super.noSuchMethod(
        Invocation.method(
          #setCancelHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setProgressHandler(_i3.ProgressHandler? callback) => super.noSuchMethod(
        Invocation.method(
          #setProgressHandler,
          [callback],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorHandler(_i3.ErrorHandler? handler) => super.noSuchMethod(
        Invocation.method(
          #setErrorHandler,
          [handler],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<dynamic> platformCallHandler(_i15.MethodCall? call) =>
      (super.noSuchMethod(
        Invocation.method(
          #platformCallHandler,
          [call],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
}

/// A class which mocks [Database].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabase extends _i1.Mock implements _i4.Database {
  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
        returnValueForMissingStub: _i16.dummyValue<String>(
          this,
          Invocation.getter(#path),
        ),
      ) as String);

  @override
  bool get isOpen => (super.noSuchMethod(
        Invocation.getter(#isOpen),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i4.Database get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _FakeDatabase_7(
          this,
          Invocation.getter(#database),
        ),
        returnValueForMissingStub: _FakeDatabase_7(
          this,
          Invocation.getter(#database),
        ),
      ) as _i4.Database);

  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<T> transaction<T>(
    _i5.Future<T> Function(_i4.Transaction)? action, {
    bool? exclusive,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#exclusive: exclusive},
        ),
        returnValue: _i16.ifNotNull(
              _i16.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#exclusive: exclusive},
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_8<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#exclusive: exclusive},
              ),
            ),
        returnValueForMissingStub: _i16.ifNotNull(
              _i16.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#exclusive: exclusive},
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_8<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#exclusive: exclusive},
              ),
            ),
      ) as _i5.Future<T>);

  @override
  _i5.Future<T> readTransaction<T>(
          _i5.Future<T> Function(_i4.Transaction)? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #readTransaction,
          [action],
        ),
        returnValue: _i16.ifNotNull(
              _i16.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #readTransaction,
                  [action],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_8<T>(
              this,
              Invocation.method(
                #readTransaction,
                [action],
              ),
            ),
        returnValueForMissingStub: _i16.ifNotNull(
              _i16.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #readTransaction,
                  [action],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_8<T>(
              this,
              Invocation.method(
                #readTransaction,
                [action],
              ),
            ),
      ) as _i5.Future<T>);

  @override
  _i5.Future<T> devInvokeMethod<T>(
    String? method, [
    Object? arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #devInvokeMethod,
          [
            method,
            arguments,
          ],
        ),
        returnValue: _i16.ifNotNull(
              _i16.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #devInvokeMethod,
                  [
                    method,
                    arguments,
                  ],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_8<T>(
              this,
              Invocation.method(
                #devInvokeMethod,
                [
                  method,
                  arguments,
                ],
              ),
            ),
        returnValueForMissingStub: _i16.ifNotNull(
              _i16.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #devInvokeMethod,
                  [
                    method,
                    arguments,
                  ],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_8<T>(
              this,
              Invocation.method(
                #devInvokeMethod,
                [
                  method,
                  arguments,
                ],
              ),
            ),
      ) as _i5.Future<T>);

  @override
  _i5.Future<T> devInvokeSqlMethod<T>(
    String? method,
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #devInvokeSqlMethod,
          [
            method,
            sql,
            arguments,
          ],
        ),
        returnValue: _i16.ifNotNull(
              _i16.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #devInvokeSqlMethod,
                  [
                    method,
                    sql,
                    arguments,
                  ],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_8<T>(
              this,
              Invocation.method(
                #devInvokeSqlMethod,
                [
                  method,
                  sql,
                  arguments,
                ],
              ),
            ),
        returnValueForMissingStub: _i16.ifNotNull(
              _i16.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #devInvokeSqlMethod,
                  [
                    method,
                    sql,
                    arguments,
                  ],
                ),
              ),
              (T v) => _i5.Future<T>.value(v),
            ) ??
            _FakeFuture_8<T>(
              this,
              Invocation.method(
                #devInvokeSqlMethod,
                [
                  method,
                  sql,
                  arguments,
                ],
              ),
            ),
      ) as _i5.Future<T>);

  @override
  _i5.Future<void> execute(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [
            sql,
            arguments,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<int> rawInsert(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #rawInsert,
          [
            sql,
            arguments,
          ],
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> insert(
    String? table,
    Map<String, Object?>? values, {
    String? nullColumnHack,
    _i17.ConflictAlgorithm? conflictAlgorithm,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #insert,
          [
            table,
            values,
          ],
          {
            #nullColumnHack: nullColumnHack,
            #conflictAlgorithm: conflictAlgorithm,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<List<Map<String, Object?>>> query(
    String? table, {
    bool? distinct,
    List<String>? columns,
    String? where,
    List<Object?>? whereArgs,
    String? groupBy,
    String? having,
    String? orderBy,
    int? limit,
    int? offset,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [table],
          {
            #distinct: distinct,
            #columns: columns,
            #where: where,
            #whereArgs: whereArgs,
            #groupBy: groupBy,
            #having: having,
            #orderBy: orderBy,
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i5.Future<List<Map<String, Object?>>>.value(
            <Map<String, Object?>>[]),
        returnValueForMissingStub: _i5.Future<List<Map<String, Object?>>>.value(
            <Map<String, Object?>>[]),
      ) as _i5.Future<List<Map<String, Object?>>>);

  @override
  _i5.Future<List<Map<String, Object?>>> rawQuery(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #rawQuery,
          [
            sql,
            arguments,
          ],
        ),
        returnValue: _i5.Future<List<Map<String, Object?>>>.value(
            <Map<String, Object?>>[]),
        returnValueForMissingStub: _i5.Future<List<Map<String, Object?>>>.value(
            <Map<String, Object?>>[]),
      ) as _i5.Future<List<Map<String, Object?>>>);

  @override
  _i5.Future<_i4.QueryCursor> rawQueryCursor(
    String? sql,
    List<Object?>? arguments, {
    int? bufferSize,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rawQueryCursor,
          [
            sql,
            arguments,
          ],
          {#bufferSize: bufferSize},
        ),
        returnValue: _i5.Future<_i4.QueryCursor>.value(_FakeQueryCursor_9(
          this,
          Invocation.method(
            #rawQueryCursor,
            [
              sql,
              arguments,
            ],
            {#bufferSize: bufferSize},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.QueryCursor>.value(_FakeQueryCursor_9(
          this,
          Invocation.method(
            #rawQueryCursor,
            [
              sql,
              arguments,
            ],
            {#bufferSize: bufferSize},
          ),
        )),
      ) as _i5.Future<_i4.QueryCursor>);

  @override
  _i5.Future<_i4.QueryCursor> queryCursor(
    String? table, {
    bool? distinct,
    List<String>? columns,
    String? where,
    List<Object?>? whereArgs,
    String? groupBy,
    String? having,
    String? orderBy,
    int? limit,
    int? offset,
    int? bufferSize,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryCursor,
          [table],
          {
            #distinct: distinct,
            #columns: columns,
            #where: where,
            #whereArgs: whereArgs,
            #groupBy: groupBy,
            #having: having,
            #orderBy: orderBy,
            #limit: limit,
            #offset: offset,
            #bufferSize: bufferSize,
          },
        ),
        returnValue: _i5.Future<_i4.QueryCursor>.value(_FakeQueryCursor_9(
          this,
          Invocation.method(
            #queryCursor,
            [table],
            {
              #distinct: distinct,
              #columns: columns,
              #where: where,
              #whereArgs: whereArgs,
              #groupBy: groupBy,
              #having: having,
              #orderBy: orderBy,
              #limit: limit,
              #offset: offset,
              #bufferSize: bufferSize,
            },
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.QueryCursor>.value(_FakeQueryCursor_9(
          this,
          Invocation.method(
            #queryCursor,
            [table],
            {
              #distinct: distinct,
              #columns: columns,
              #where: where,
              #whereArgs: whereArgs,
              #groupBy: groupBy,
              #having: having,
              #orderBy: orderBy,
              #limit: limit,
              #offset: offset,
              #bufferSize: bufferSize,
            },
          ),
        )),
      ) as _i5.Future<_i4.QueryCursor>);

  @override
  _i5.Future<int> rawUpdate(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #rawUpdate,
          [
            sql,
            arguments,
          ],
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> update(
    String? table,
    Map<String, Object?>? values, {
    String? where,
    List<Object?>? whereArgs,
    _i17.ConflictAlgorithm? conflictAlgorithm,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [
            table,
            values,
          ],
          {
            #where: where,
            #whereArgs: whereArgs,
            #conflictAlgorithm: conflictAlgorithm,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> rawDelete(
    String? sql, [
    List<Object?>? arguments,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #rawDelete,
          [
            sql,
            arguments,
          ],
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<int> delete(
    String? table, {
    String? where,
    List<Object?>? whereArgs,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
          {
            #where: where,
            #whereArgs: whereArgs,
          },
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i4.Batch batch() => (super.noSuchMethod(
        Invocation.method(
          #batch,
          [],
        ),
        returnValue: _FakeBatch_10(
          this,
          Invocation.method(
            #batch,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeBatch_10(
          this,
          Invocation.method(
            #batch,
            [],
          ),
        ),
      ) as _i4.Batch);
}

/// A class which mocks [QuizFavoriteSql].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuizFavoriteSql extends _i1.Mock implements _i18.QuizFavoriteSql {
  @override
  List<List<String>> get queries => (super.noSuchMethod(
        Invocation.getter(#queries),
        returnValue: <List<String>>[],
        returnValueForMissingStub: <List<String>>[],
      ) as List<List<String>>);

  @override
  _i5.Future<_i4.Database> get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _i5.Future<_i4.Database>.value(_FakeDatabase_7(
          this,
          Invocation.getter(#db),
        )),
        returnValueForMissingStub:
            _i5.Future<_i4.Database>.value(_FakeDatabase_7(
          this,
          Invocation.getter(#db),
        )),
      ) as _i5.Future<_i4.Database>);
}

/// A class which mocks [TtsRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockTtsRepositoryImpl extends _i1.Mock implements _i19.TtsRepositoryImpl {
  @override
  _i8.AppInstallType get appInstallType => (super.noSuchMethod(
        Invocation.getter(#appInstallType),
        returnValue: _i8.AppInstallType.none,
        returnValueForMissingStub: _i8.AppInstallType.none,
      ) as _i8.AppInstallType);

  @override
  _i5.Future<void> initializeTts(_i8.AppInstallType? appInstallType) =>
      (super.noSuchMethod(
        Invocation.method(
          #initializeTts,
          [appInstallType],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> speak(String? text) => (super.noSuchMethod(
        Invocation.method(
          #speak,
          [text],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> stop() => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
