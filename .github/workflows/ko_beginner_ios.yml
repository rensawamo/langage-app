name: ko_beginner_ios

on:
  pull_request:
    branches:
      - current_none
    types: [closed]

jobs:
  build_iOS:
    name: ko_beginner_ios
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
        with:
          test-bot: false

      - name: install fvm
        run: |
            brew tap leoafarias/fvm
            brew install fvm

      - name: set up fvm
        run: |
          fvm install

      - name:  Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: set up dart
        run: |
          fvm dart --version

      - name: Set up Melos
        run: |
          fvm dart pub global activate melos

      - name: melso bootstrap
        run: |
          fvm dart pub global run melos bootstrap

      - name: melos test
        run: |
          fvm dart pub global run melos unit_test

           # Upload results of failed Golden tests if test command failed.
          if [ $? -ne 0 ]; then
            # Finds all "failures" folders and copies them to the export
            # directory. Therefore, we are able to view the results of the
            # failed Golden tests.
            #
            # The command will use the exit code 0 (success) even when there are
            # no failures folders.
            find * -path '**/failures' -execdir bash -c "cp -r failures $FCI_EXPORT_DIR" \;

            # Because we caught the exit code of the test command, we need to
            # set manually again.
            exit 1
          fi

      - name: Add GoogleService-Info.plist
        run: echo "${{ secrets.KO_BEGINNER_GOOGLE_SERVICES_INFO_BASE64 }}" | base64 -d > apps/ko_beginner/ios/prod/GoogleService-Info.plist

      - name: Add firebase_options.dart
        run: echo "${{ secrets.KO_BEGINNER_FIREBASE_OPTION_BASE64 }}" | base64 -d > apps/ko_beginner/lib/firebase_options.dart

      - name: Add ExportOptions.plist
        run: echo "${{ secrets.KO_BEGINNER_EXPORTOPTIONS_BASE64 }}" | base64 -d > apps/ko_beginner/ExportOptions.plist


      - name: Import Provisioning Profile
        run: |
            mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
            echo -n ${{ secrets.KO_BEGINNER_PROVISIONING_PROFILE_BASE64 }} | base64 -d > ~/Library/MobileDevice/Provisioning\ Profiles/distribution.mobileprovision
      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
            p12-file-base64: ${{ secrets.CERTIFICATES_P12_BASE64 }}
            p12-password: ${{ secrets.CERTIFICATE_PASSWORD }}

      - name: Create ipa file
        run: cd apps/ko_beginner && fvm flutter build ipa --release --obfuscate --split-debug-info=obfuscate/ios --dart-define=FLAVOR=prod --export-options-plist=ExportOptions.plist --build-number ${GITHUB_RUN_NUMBER}

      - name: Upload to AppStoreConnect
        run: cd  apps/ko_beginner &&  xcrun altool --upload-app -t ios -f "build/ios/ipa/ko_beginner.ipa" -u "${{ secrets.APPLE_ID }}" -p "${{ secrets.APPLE_APP_PASSWORD }}"

      - name: collect ipa artifacts
        uses: actions/upload-artifact@v2
        with:
            name: release-ipa
            path: apps/ko_beginner/build/ios/ipa/*.ipa

  #  contanier error対策　で firebase destributionにデプロイする時は切り替える
  release:
    name: Release ipa to Firebase
    needs: [build_iOS]
    runs-on: ubuntu-latest
    steps:
          - uses: actions/checkout@v2
          - name: Get release-ipa from artifacts
            uses: actions/download-artifact@v2
            with:
                name: release-ipa
          - name: Print working directory
            run: pwd
          - name: Upload artifact to Firebase App Distribution
            uses: wzieba/Firebase-Distribution-Github-Action@v1
            with:
              appId: ${{secrets.KO_BEGINNER_IOS_APP_ID}}
              serviceCredentialsFileContent: ${{ secrets.KO_BEGINNER_CREDENTIAL_FILE_CONTENT}}
              groups: testers
              file: ko_beginner.ipa
